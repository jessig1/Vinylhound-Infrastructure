version: '3.8'

services:
  # Database
  postgres:
    image: postgres:16-alpine
    container_name: vinylhound-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: vinylhound
      POSTGRES_PASSWORD: localpassword
      POSTGRES_DB: vinylhound
    ports:
      - "54320:5432"
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vinylhound"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build:
      context: ../Vinylhound-Backend
      dockerfile: services/user-service/Dockerfile
    container_name: vinylhound-user-service
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: vinylhound
      DB_PASSWORD: localpassword
      DB_NAME: vinylhound
      DB_SSLMODE: disable
      PORT: 8001
    ports:
      - "8001:8001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Catalog Service
  catalog-service:
    build:
      context: ../Vinylhound-Backend
      dockerfile: services/catalog-service/Dockerfile
    container_name: vinylhound-catalog-service
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: vinylhound
      DB_PASSWORD: localpassword
      DB_NAME: vinylhound
      DB_SSLMODE: disable
      PORT: 8002
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Rating Service
  rating-service:
    build:
      context: ../Vinylhound-Backend
      dockerfile: services/rating-service/Dockerfile
    container_name: vinylhound-rating-service
    restart: unless-stopped
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: vinylhound
      DB_PASSWORD: localpassword
      DB_NAME: vinylhound
      DB_SSLMODE: disable
      PORT: 8003
    ports:
      - "8003:8003"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Playlist Service
  playlist-service:
    build:
      context: ../Vinylhound-Backend
      dockerfile: services/playlist-service/Dockerfile
    container_name: vinylhound-playlist-service
    restart: unless-stopped
    environment:
      PORT: 8004
    ports:
      - "8004:8004"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Frontend
  web-frontend:
    build:
      context: ../vinylhound-frontend
      dockerfile: Dockerfile
    container_name: vinylhound-web-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_BASE_URL: http://localhost:8080/api/v1
    depends_on:
      - api-gateway

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile.gateway
    container_name: vinylhound-api-gateway
    restart: unless-stopped
    environment:
      USER_SERVICE_URL: http://user-service:8001
      CATALOG_SERVICE_URL: http://catalog-service:8002
      RATING_SERVICE_URL: http://rating-service:8003
      PLAYLIST_SERVICE_URL: http://playlist-service:8004
      PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      - user-service
      - catalog-service
      - rating-service
      - playlist-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgdata:
