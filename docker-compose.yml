version: '3.8'

services:
  # Database
  postgres:
    image: postgres:16-alpine
    container_name: vinylhound-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-vinylhound}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Please set POSTGRES_PASSWORD in .env file}
      POSTGRES_DB: ${POSTGRES_DB:-vinylhound}
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-54320}:5432"
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vinylhound"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Monolith
  vinylhound-backend:
    build:
      context: ../Vinylhound-Backend
      dockerfile: Dockerfile
    container_name: vinylhound-backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${DB_USER:-vinylhound}:${DB_PASSWORD:?Please set DB_PASSWORD in .env file}@${DB_HOST:-postgres}:${DB_PORT:-5432}/${DB_NAME:-vinylhound}?sslmode=${DB_SSLMODE:-disable}
      JWT_SECRET: ${JWT_SECRET:?Please set JWT_SECRET in .env file}
      PORT: ${BACKEND_PORT:-8080}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:5173}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Frontend
  web-frontend:
    build:
      context: ../vinylhound-frontend
      dockerfile: Dockerfile
    container_name: vinylhound-web-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8080/api/v1}
    depends_on:
      - vinylhound-backend

volumes:
  pgdata:
