version: '3.8'

services:
  # Database
  postgres:
    image: postgres:16-alpine
    container_name: vinylhound-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-vinylhound}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?Please set POSTGRES_PASSWORD in .env file}
      POSTGRES_DB: ${POSTGRES_DB:-vinylhound}
    ports:
      - "${POSTGRES_EXTERNAL_PORT:-54320}:5432"
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vinylhound"]
      interval: 10s
      timeout: 5s
      retries: 5

  # User Service
  user-service:
    build:
      context: ../Vinylhound-Backend
      dockerfile: services/user-service/Dockerfile
    container_name: vinylhound-user-service
    restart: unless-stopped
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-vinylhound}
      DB_PASSWORD: ${DB_PASSWORD:?Please set DB_PASSWORD in .env file}
      DB_NAME: ${DB_NAME:-vinylhound}
      DB_SSLMODE: ${DB_SSLMODE:-disable}
      JWT_SECRET: ${JWT_SECRET:?Please set JWT_SECRET in .env file}
      PORT: ${USER_SERVICE_PORT:-8001}
    ports:
      - "${USER_SERVICE_PORT:-8001}:8001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Catalog Service
  catalog-service:
    build:
      context: ../Vinylhound-Backend
      dockerfile: services/catalog-service/Dockerfile
    container_name: vinylhound-catalog-service
    restart: unless-stopped
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-vinylhound}
      DB_PASSWORD: ${DB_PASSWORD:?Please set DB_PASSWORD in .env file}
      DB_NAME: ${DB_NAME:-vinylhound}
      DB_SSLMODE: ${DB_SSLMODE:-disable}
      JWT_SECRET: ${JWT_SECRET:?Please set JWT_SECRET in .env file}
      PORT: ${CATALOG_SERVICE_PORT:-8002}
    ports:
      - "${CATALOG_SERVICE_PORT:-8002}:8002"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Rating Service
  rating-service:
    build:
      context: ../Vinylhound-Backend
      dockerfile: services/rating-service/Dockerfile
    container_name: vinylhound-rating-service
    restart: unless-stopped
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-vinylhound}
      DB_PASSWORD: ${DB_PASSWORD:?Please set DB_PASSWORD in .env file}
      DB_NAME: ${DB_NAME:-vinylhound}
      DB_SSLMODE: ${DB_SSLMODE:-disable}
      JWT_SECRET: ${JWT_SECRET:?Please set JWT_SECRET in .env file}
      PORT: ${RATING_SERVICE_PORT:-8003}
    ports:
      - "${RATING_SERVICE_PORT:-8003}:8003"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Playlist Service
  playlist-service:
    build:
      context: ../Vinylhound-Backend
      dockerfile: services/playlist-service/Dockerfile
    container_name: vinylhound-playlist-service
    restart: unless-stopped
    environment:
      DB_HOST: ${DB_HOST:-postgres}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER:-vinylhound}
      DB_PASSWORD: ${DB_PASSWORD:?Please set DB_PASSWORD in .env file}
      DB_NAME: ${DB_NAME:-vinylhound}
      DB_SSLMODE: ${DB_SSLMODE:-disable}
      PORT: ${PLAYLIST_SERVICE_PORT:-8004}
    ports:
      - "${PLAYLIST_SERVICE_PORT:-8004}:8004"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Frontend
  web-frontend:
    build:
      context: ../vinylhound-frontend
      dockerfile: Dockerfile
    container_name: vinylhound-web-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8001/api/v1}
    depends_on:
      - user-service
      - catalog-service
      - rating-service
      - playlist-service

volumes:
  pgdata:
